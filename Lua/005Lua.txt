String

string.byte(string,pos)
返回第pos个字符的整数表示形式.如a为97
_______________________
string.char(i1,i2,i3..)
i1,i2为整型,将i1,i2..等转化为对应的字符然后连接成字符串,并返回.
如i1=97则返回a.
_______________________

string.find()
string.find("cdcdcdcd","ab")	nil
string.find("cdcdcdcd","cd")	1 2
string.find("cdcdcdcd","cd",7)	7 8
___________________________________

string.len(s)
_______________________________
string.upper()  string.lower()

________________________________

string.rep(s, n) 讲s拷贝n份
________________________-_______

string.sub("abcd",2)	bcd
string.sub("abcd",-2)	cd
string.sub("abcd",2,-2)	bc
string.sub("abcd",2,3)	bc
________________________________
string.gsub("abcdabcd","a","z");	zbcdzbcd 2
string.gsub("aaaa","a","z",3);	zzza 3
________________________________



下面的表列出了Lua支持的所有字符类：
. 任意字符
%s 空白符

%p 标点字符
%c 控制字符

%d 数字
%x 十六进制数字

%z 代表0的字符
%a 字母
%l 小写字母
%u 大写字母
%w 字母和数字

上面字符类的大写形式表示小写所代表的集合的补集。
例如，'%A'非字母的字符

模式串中的特殊字符
( ) . % + - * ? [ ^ $

'%' 用作特殊字符的转义字符
'%.' 匹配点；
'%%' 匹配字符 '%'。
转义字符 '%'不仅可以用来转义特殊字符，还可以用于所有的非字母的字符。
当对一个字符有疑问的时候，为安全起见请使用转义字符转义他。

用'[]'创建字符集
'[%w_]' 匹配字母数字和下划线
'[01]' 匹配二进制数字
'[%[%]]'匹配一对方括号

在'[]'中使用连字符'-'
'%d'    表示 '[0-9]'；
'%x'    表示 '[0-9a-fA-F]'
'[0-7]' 表示 '[01234567]'

在'[]'开始处使用 '^' 表示其补集：
'[^0-7]' 匹配任何不是八进制数字的字符；
'[^/n]' 匹配任何非换行符户的字符。
'[^%s]' == '%S'














